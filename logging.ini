version: 1

formatters:
  grouped:
    format: '{asctime} | {levelname:5} | {name} | {message}'
    datefmt: '%y-%m-%d %H:%M:%S'
    style: '{'
  details:
    format: '{asctime} | {levelname:5} | {lineno:4} | {module:13} | {filename:20} | {funcName:20} | {message}'
    style: '{'
  errors:
    format: '{asctime} | {lineno:4} | {module} | {funcName} | {name} | {message}'
    style: '{'
  simple:
    format: '{asctime} | {levelname:5} | {lineno:3} | {name} | {message}'
    datefmt: '%y-%m-%d %H:%M:%S'
    style: '{'
  debug:
    format: '{asctime} | {levelname:5} | {lineno:3} | {name} | {message}'
    datefmt: '%H:%M:%S'
    style: '{'
  console:
    format: '{asctime} | {module:13} | {message}'
    datefmt: '%H:%M:%S'
    style: '{'

handlers:
  console:
    class: logging.StreamHandler
    level: DEBUG
    formatter: console # debug
    stream: ext://sys.stdout
  error_file:
    class: logging.FileHandler #logging.handlers.RotatingFileHandler
    level: ERROR
    formatter: simple
    filename: logs/errors.log
    mode: a
    # maxBytes: 1048576
    # backupCount: 3
    encoding: utf8
  grouped_logger:
    class: logging.FileHandler
    level: DEBUG
    formatter: simple
    filename: logs/groupped_logs.log
    mode: w
    encoding: utf8
  cli_logger:
    class: logging.FileHandler
    level: DEBUG
    formatter: details
    filename: logs/cli.log
    mode: a
    encoding: utf8
  client_logger:
    class: logging.FileHandler
    level: DEBUG
    formatter: details
    filename: logs/client.log
    mode: a
    encoding: utf8
  stream_logger:
    class: logging.FileHandler
    level: DEBUG
    formatter: details
    filename: logs/stream.log
    mode: a
    encoding: utf8
  app_logger:
    class: logging.FileHandler
    level: DEBUG
    formatter: details
    filename: logs/app.log
    mode: a
    encoding: utf8

loggers:
  cli:
    level: DEBUG
    handlers: [console, cli_logger, grouped_logger, error_file]
    # propagate: no
  client:
    level: DEBUG
    handlers: [console, client_logger, grouped_logger, error_file]
  stream:
    level: DEBUG
    handlers: [console, stream_logger, grouped_logger, error_file]
  app:
    level: DEBUG
    handlers: [console, app_logger, grouped_logger, error_file]
  train:
    level: DEBUG
    handlers: [console, error_file, grouped_logger]
  train_no_console:
    level: DEBUG
    handlers: [error_file, grouped_logger]

# root:
#  level: DEBUG
#  handlers: [console, error_file, debug_file]

# disable_existing_loggers: False
